:root {
    --board-width: 800px;
    --board-height: 600px;
    --point-width: 60px;
    --point-height: 240px;
    --bar-width: 40px;
    --checker-size: 50px;
}

body {
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f0f0f0;
    font-family: Arial, sans-serif;
}

.game-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
    align-items: center;
}

.board {
    width: var(--board-width);
    height: var(--board-height);
    background-color: #E6D5AC;
    border: 20px solid #8B4513;
    border-radius: 10px;
    display: flex;
    flex-wrap: wrap;
    position: relative;
}

.quadrant {
    width: calc((var(--board-width) - var(--bar-width)) / 2);
    height: calc(var(--board-height) / 2);
    display: flex;
    justify-content: space-evenly;
    position: relative;
}

.bar {
    width: var(--bar-width);
    height: var(--board-height);
    background-color: #8B4513;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.bar-top,
.bar-bottom {
    height: calc(var(--board-height) / 2);
    width: 100%;
}

.bar .piece-spots {
    padding: 5px 0;
}

.point {
    width: var(--point-width);
    height: var(--point-height);
    position: relative;
    clip-path: polygon(50% 0%, 100% 100%, 0% 100%);
    display: flex;
    justify-content: center;
    z-index: 1;
}

.point-number {
    position: absolute;
    bottom: -25px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 14px;
    color: #666;
    z-index: 4;
}

.piece-spots {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 5px;
    box-sizing: border-box;
    z-index: 100;
    position: relative;
}

.piece-spots > * {
    margin: 2px 0;
}

/* Top points piece spots alignment */
.top-right .piece-spots,
.top-left .piece-spots {
    flex-direction: column-reverse;
}

/* Top points are inverted */
.top-right .point,
.top-left .point {
    transform: rotate(180deg);
}

/* Colors for points */
.point.red {
    background-color: #8B0000;
}

.point.black {
    background-color: #000000;
}

/* Game controls styling */
.game-controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
    margin-top: 20px;
}

.dice-container {
    display: flex;
    gap: 20px;
    margin: 10px 0;
    min-height: 60px;
}

.die {
    width: 50px;
    height: 50px;
    background-color: white;
    border: 2px solid #333;
    border-radius: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
    font-weight: bold;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    transition: transform 0.3s ease;
}

.die.rolling {
    animation: rollDice 0.5s ease;
}

@keyframes rollDice {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(90deg); }
    50% { transform: rotate(180deg); }
    75% { transform: rotate(270deg); }
    100% { transform: rotate(360deg); }
}

/* Update button styles to ensure proper spacing */
#roll-dice, #refresh-game {
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    min-width: 120px;
}

#roll-dice {
    background-color: #4CAF50;
    color: white;
}

#roll-dice:hover {
    background-color: #45a049;
}

#dice-display {
    font-size: 18px;
    font-weight: bold;
}

#game-status {
    font-size: 18px;
    color: #333;
}

/* Checker styling */
.checker {
    width: var(--checker-size);
    height: var(--checker-size);
    border-radius: 50%;
    margin: 2px 0;
    position: relative;
    z-index: 1000;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.checker.white {
    background-color: #ffffff;
    border: 2px solid #000000;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.checker.black {
    background-color: #000000;
    border: 2px solid #ffffff;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.checker:hover {
    transform: scale(1.1);
    z-index: 1001;
}

.valid-move {
    background-color: rgba(0, 255, 0, 0.2);
    cursor: pointer;
}

/* Bearing off areas */
.bear-off {
    width: var(--checker-size);
    height: calc(var(--board-height) / 2);
    background-color: #6b3000;
    position: absolute;
    right: -70px;
}

.white-bear-off {
    bottom: 0;
}

.black-bear-off {
    top: 0;
}

.bear-off .piece-spots {
    padding: 5px 0;
}

/* Point highlighting */
.point.valid-move::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 255, 0, 0.2);
    pointer-events: none;
}

/* Add hover effect for points */
.point:hover {
    filter: brightness(1.1);
}

/* Add data attributes for easier JavaScript handling */
[data-point] {
    cursor: pointer;
}

/* Ensure proper stacking in top quadrants */
.top-right .point,
.top-left .point {
    transform: rotate(180deg);
}

.top-right .checker,
.top-left .checker {
    transform: rotate(-180deg);
}

/* Add styling for the refresh button */
#refresh-game {
    padding: 10px 20px;
    font-size: 16px;
    background-color: #ff4444;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

#refresh-game:hover {
    background-color: #cc0000;
}

/* Add counter for stacked pieces */
.checker[data-count]::after {
    content: attr(data-count);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--checker-count-color, #666);
    font-size: 14px;
    font-weight: bold;
}

.checker.white[data-count]::after {
    --checker-count-color: #000;
}

.checker.black[data-count]::after {
    --checker-count-color: #fff;
} 